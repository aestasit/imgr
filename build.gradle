
group = 'com.aestasit.infrastructure.imgr'
version = '0.1-SNAPSHOT'

buildscript {
  repositories { mavenCentral() }
  dependencies { classpath 'net.saliman:gradle-cobertura-plugin:2.0.0' }
  dependencies { classpath 'org.ajoberstar:gradle-git:0.6.3' }
}

apply plugin: 'application'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'cobertura'
apply plugin: 'github-pages'

apply from: 'repos.gradle'
apply from: 'sonar.gradle'
apply from: 'docs.gradle'

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

mainClassName = "com.aestasit.infrastructure.Packer"

repositories {
  mavenCentral()
  maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

configure(allprojects) {
  ext.groovy = '2.1.0'
  ext.slf4jVersion = '1.7.5'
  ext.logbackVersion = '1.0.13'
}

dependencies {
  compile "org.codehaus.groovy:groovy-all:${groovy}"
  compile 'com.aestasit.cloud.aws:gramazon:0.2-SNAPSHOT'
  compile 'com.aestasit.gradle:gradle-ssh-plugin:0.8-SNAPSHOT'
  compile "org.slf4j:slf4j-api:$slf4jVersion"
  compile "ch.qos.logback:logback-classic:$logbackVersion"
  compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
  compile 'org.fusesource.jansi:jansi:1.11'
  testCompile 'junit:junit:4.11'
  testRuntime 'ch.qos.logback:logback-core:1.0.7'
  testRuntime 'ch.qos.logback:logback-classic:1.0.7'
}

test.doFirst {
  systemProperties = System.getProperties()
  project.properties.each { key, value ->
    if (key.startsWith("aws")) {
      systemProperties[key] = value
    }
  }
}

// Test are only executed when launching gradle with -Drun.tests=true
test.onlyIf { Boolean.getBoolean('run.tests') }

task wrapper(type: Wrapper) {
  gradleVersion = '1.8'
}
